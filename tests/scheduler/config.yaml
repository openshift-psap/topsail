ci_presets:
  # name of the presets to apply, or null if no preset
  name: null
  # list of names of the presets to apply, or a single name, or null if no preset
  names: null

  single:
    clusters.create.type: single

  keep:
    extends: [light_cluster]

    clusters.create.keep: true

  light_cluster:
    clusters.create.ocp.deploy_cluster.target: cluster_light

  light:
    extends: [light_cluster]

  cleanup:
    clusters.cleanup_on_exit: true

  # ---

  cluster_dgx:
    clusters.sutest.compute.machineset.type: "DGX A100-40GB"

  cluster_icelake:
    clusters.sutest.compute.machineset.type: "Icelake"

  metal:
    clusters.sutest.is_metal: true
    clusters.driver.is_metal: true
    clusters.sutest.compute.dedicated: false
    clusters.driver.compute.dedicated: false
    clusters.sutest.compute.machineset.type: "bare-metal node"

  not_metal:
    clusters.sutest.is_metal: false
    clusters.driver.is_metal: false

  # ---

  schedulers_comparison:
    tests.schedulers.matbenchmarking.enabled: true
    tests.schedulers.test_settings.mode: [coscheduling, kueue, job] # mcad not available in 2.9

  kueue_only:
    tests.schedulers.matbenchmarking.enabled: false
    tests.schedulers.test_settings.mode: kueue
    tests.deploy_coscheduling: false

  job_only:
    tests.schedulers.matbenchmarking.enabled: false
    tests.schedulers.test_settings.mode: job
    tests.deploy_coscheduling: false

  just_test:
    tests.visualize: false
    tests.capture_prom: false

  cpu_icelake_scheduling:
    extends: [schedulers_comparison]
    tests.schedulers.tests_to_run: [common_scheduling]
    tests.schedulers.test_settings.count: 300
    tests.schedulers.test_settings.pod.count: 1
    tests.schedulers.test_settings.pod.requests.cpu: 100m
    tests.schedulers.test_settings.timespan: 1

  cpu_icelake_gang_scheduling_light:
    extends: [cpu_icelake_gang_scheduling]
    tests.schedulers.test_settings.count: 30

  cpu_icelake_gang_scheduling:
    extends: [schedulers_comparison]
    tests.schedulers.tests_to_run: [common_scheduling]
    tests.schedulers.test_settings.count: 300
    tests.schedulers.test_settings.pod.count: 10
    tests.schedulers.test_settings.pod.requests.cpu: 1
    tests.schedulers.test_settings.timespan: 1 # minutes

  cpu_icelake_gang_scheduling_large:
    extends: [cpu_icelake_gang_scheduling]
    tests.schedulers.test_settings.count: 3000
    tests.schedulers.test_settings.timespan: 10 # minutes

  cpu_icelake_gang_scheduling_larger:
    extends: [cpu_icelake_gang_scheduling]
    tests.schedulers.test_settings.count: 10
    tests.schedulers.test_settings.pod.count: 3
    tests.schedulers.test_settings.pod.requests.cpu: 50
    tests.schedulers.test_settings.pod.runtime: 180

  kwok:
    ci_presets.metal["clusters.sutest.compute.dedicated"]: true
    clusters.sutest.compute.dedicated: true
    kwok.enabled: true

    tests.schedulers.test_settings.node.instance_type: kwok
    tests.schedulers.test_settings.node.count: 10
    tests.schedulers.test_settings.node.wait_gpus: false
    tests.schedulers.test_settings.pod.runtime: 120 # s
    tests.schedulers.test_settings.timespan: 0 # minutes

  # ---

secrets:
  dir:
    name: psap-ods-secret
    env_key: PSAP_ODS_SECRET_PATH
  # name of the file containing the properties of LDAP secrets
  s3_ldap_password_file: s3_ldap.passwords
  keep_cluster_password_file: get_cluster.password
  brew_registry_redhat_io_token_file: brew.registry.redhat.io.token
  model_s3_cred: .awscred
  opensearch_instances: opensearch.yaml
  aws_credentials: .awscred

clusters:
  metal_profiles:
    p42-h03-dgx.rdu3.labs.perfscale.redhat.com: cluster_dgx
    e26-h23-000-r650: cluster_icelake
    bb37-h13-000-r750.rdu3.labs.perfscale.redhat.com: cluster_a30
  create:
    type: single # can be: single, ocp, managed
    keep: false
    name_prefix: scheduler-ci
    ocp:
      # list of tags to apply to the machineset when creating the cluster
      tags:
        TicketId: 404
        Project: PSAP/RHOAI/kueue/ci-dev
      deploy_cluster:
        target: cluster
      base_domain: psap.aws.rhperfscale.org
      version: 4.15.5
      region: us-west-2
      control_plane:
        type: m6a.xlarge
      workers:
        type: m6a.2xlarge
        count: 2
        spot: false

  sutest:
    is_metal: false
    lab:
      name: null
    compute:
      dedicated: true
      machineset:
        name: workload-pods
        taint:
          key: only-workload-pods
          value: "yes"
          effect: NoSchedule
    worker:
      label: initial_worker_node=true
      fill_resources:
        enabled: false
        namespace: worker-nodes-placeholder
  driver:
    is_metal: false
    compute:
      dedicated: true
      machineset:
        name: test-pods
        type: m6i.2xlarge
        count: null
        spot: false
        taint:
          key: only-test-pods
          value: "yes"
          effect: NoSchedule
  cleanup_on_exit: false

base_image:
  namespace: kwok-job-controller
  imagestream: topsail
  repo:
    url: https://github.com/openshift-psap/topsail/
    tag: main
    ref: main
    ref_prefer_pr: true
    dockerfile_path: build/Dockerfile
  user:
    service_account: topsail
    role: cluster-admin
  minio:
    enabled: false
  startup_synchronization:
    enabled: false

rhods:
  catalog:
    image: brew.registry.redhat.io/rh-osbs/iib
    tag: 712547
    channel: odh-nightlies
    version: 1.18.0
    version_name: nightly
    opendatahub: true
    managed_rhoi: false
  operator:
    # set to true to stop the RHODS operator
    stop: true
    kueue_image: quay.io/modh/kueue:519fdc19c8a3a6bfad517be866356a5e0eed715b
    kto_image: quay.io/modh/training-operator:693295eb0d69fe1d9fc577ac3f885243e7c69c40

gpu:
  prepare_cluster: false
  time_sharing:
    replicas: 1

kwok:
  enabled: false
  job_controller:
    count: 1
  nodes:
    spec:
      cpu: 32
      memory: 128
      gpu: 0
      pods: 250

tests:
  mode: job
  dry_mode: false
  visualize: true
  capture_prom: true
  deploy_coscheduling: true
  schedulers:
    kueue:
      queue_name: local-queue

    namespace: scheduler-load-test

    prepare_nodes: true
    stop_on_error: true

    tests_to_run: [common_scheduling]
    distribution: poisson
    test_templates_file: test_templates.yaml # relative to testing/codeflare directory

    matbenchmarking:
      enabled: true
      visu_file: plot_multiple_tests.yaml

    # placeholder for PR-args override
    test_settings:
      count: null
      mode: [kueue, coscheduling, job] # job, kueue, coscheduling, mcad
      pod:
        count: null
        runtime: null
        requests:
          cpu: null
      timespan: null
      node:
        count: null
        instance_type: null
        wait_gpus: null

matbench:
  preset: null
  workload: projects.scheduler.visualizations.schedulers
  config_file: plots.yaml
  download:
    mode: prefer_cache
    url:
    url_file:
    # if true, copy the results downloaded by `matbench download` into the artifacts directory
    save_to_artifacts: false
  # directory to plot. Set by topsail/testing/visualize.py before launching the visualization
  test_directory: null
  lts:
    generate: false
    horreum:
      test_name: null
    opensearch:
      export:
        enabled: false
        enabled_on_replot: false
        fail_test_on_fail: true
      instance: smoke
      index: rhoai-scheduler
      index_prefix: ""

    regression_analyses:
      enabled: false
      enabled_on_replot: false
      # if the regression analyses fail, mark the test as failed
      fail_test_on_regression: true
export_artifacts:
  enabled: false
  bucket: rhoai-cpt-artifacts
  path_prefix: cpt/scheduler
  dest: null # will be set by the export code
