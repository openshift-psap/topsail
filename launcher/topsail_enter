#! /bin/bash

set -o pipefail
set -o errexit
set -o nounset
set -o errtrace
# set -x

THIS_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
set -a
source "$THIS_DIR"/topsail_host_config.default
if [[ -f "$THIS_DIR/topsail_host_config.custom" ]];
then
    source "$THIS_DIR/topsail_host_config.custom"
fi
set +a

if [[ "$#" == 0 ]]; then
    command="cd $TOPSAIL_HOME && $TOPSAIL_TOOLBOX_COMMAND"
elif [[ "$1" == "here" ]]; then
    command="$TOPSAIL_TOOLBOX_COMMAND"
else
    command="$@"
fi

container_env=$(cat "$THIS_DIR/topsail_container_env.default")
if [[ -f "$THIS_DIR/topsail_container_env.custom" ]];
then
    container_env=$(echo "$container_env"; cat "$THIS_DIR/topsail_container_env.custom")
fi
env=$(echo "$container_env" | envsubst)

if has_toolbox; then
    exec toolbox run -c $TOPSAIL_TOOLBOX_NAME -- bash -c "set -a; $env ; set +a; $command"
fi

# toolbox not available. Simulate it.

env_args=()
while IFS= read -r line; do
    line=$(echo "$line" | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//' -e 's/"//g')
    [[ "$line" =~ ^#.*$ || -z "$line" ]] && continue  # skip comments and empty lines
    processed_line=$(echo "$line" | envsubst)
    env_args+=("--env" "$processed_line")
done <<< "$env"

exec podman run "${env_args[@]}" \
     --security-opt label=disable --cgroupns host \
     -it --rm  \
     -v "$TOPSAIL_HOME:$TOPSAIL_HOME:Z" \
     -v "$HOME:$HOME:rslave" \
     -w "$TOPSAIL_HOME" \
     "$TOPSAIL_TOOLBOX_NAME" \
     /bin/bash
