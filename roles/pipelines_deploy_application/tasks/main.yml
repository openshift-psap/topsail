---
- name: Check if the namespace exists
  command:
    oc get namespace "{{ pipelines_deploy_application_namespace }}" -oname
  failed_when: false
  register: namespace_exists

- name: Create the namespace, if it does not exist
  command:
    oc new-project "{{ pipelines_deploy_application_namespace }}" --skip-config-write
  when: namespace_exists.rc != 0

- name: Create the src artifacts directory
  file:
    path: "{{ artifact_extra_logs_dir }}/src/"
    state: directory
    mode: '0755'

- name: Create the artifacts artifacts directory
  file:
    path: "{{ artifact_extra_logs_dir }}/artifacts/"
    state: directory
    mode: '0755'

- name: Prepare the template file
  template:
    src: "{{ pipelines_deploy_application_app_template }}"
    dest: "{{ artifact_extra_logs_dir }}/src/dsp_application.yaml"
    mode: '0400'

- name: Create the application
  command:
    oc apply -f "{{ artifact_extra_logs_dir }}/src/dsp_application.yaml"

- name: Wait for the deployments to be all available
  block:

  - name: Wait for the application to be ready
    shell:
      set -o pipefail;
      oc get -f "{{ artifact_extra_logs_dir }}/src/dsp_application.yaml" -ojson
        | jq '.status.conditions[]
        | select(.type == "Ready")
        | .status' -r
    register: app_ready_cmd
    until: app_ready_cmd.stdout == "True"
    retries: 120
    delay: 10

  always:
  - name: Save the status of the DSPApplication
    shell:
      oc get -oyaml
         -f "{{ artifact_extra_logs_dir }}/src/dsp_application.yaml"
         > "{{ artifact_extra_logs_dir }}/artifacts/dsp_application.yaml"
    ignore_errors: true

  - name: Get the list of the deployments
    shell:
      oc get deploy
         -lcomponent=data-science-pipelines
         -n {{ pipelines_deploy_application_namespace }}
         > "{{ artifact_extra_logs_dir }}/artifacts/deployments.status"
    ignore_errors: true

  - name: Get the list of the pods
    shell:
      oc get pods
        -lcomponent=data-science-pipelines
        -n {{ pipelines_deploy_application_namespace }}
        > "{{ artifact_extra_logs_dir }}/artifacts/pods.status"
    ignore_errors: true

  - name: Get the yaml of the pods
    shell:
      oc get pods -oyaml
        -lcomponent=data-science-pipelines
        -n {{ pipelines_deploy_application_namespace }}
        > "{{ artifact_extra_logs_dir }}/artifacts/pods.yaml"
    ignore_errors: true

  - name: Get the description of the pods
    shell:
      oc describe pods
        -lcomponent=data-science-pipelines
        -n {{ pipelines_deploy_application_namespace }}
        > "{{ artifact_extra_logs_dir }}/artifacts/pods.desc"
    ignore_errors: true
