apiVersion: cluster.x-k8s.io/v1beta1
kind: MachineDeployment
metadata:
  name: "{{ kubemark_deploy_nodes_deployment_name }}"
  namespace: "{{ kubemark_deploy_nodes_namespace }}"
  annotations:
    cluster.x-k8s.io/cluster-api-autoscaler-node-group-min-size: "1"
    cluster.x-k8s.io/cluster-api-autoscaler-node-group-max-size: "5"
spec:
  clusterName: "{{ cluster_name }}"
  replicas: {{ kubemark_deploy_nodes_count }}
  selector:
    matchLabels:
      cluster.x-k8s.io/cluster-name: "{{ cluster_name }}"
      cluster.x-k8s.io/deployment-name: "{{ kubemark_deploy_nodes_deployment_name }}"
  template:
    metadata:
      labels:
        cluster.x-k8s.io/cluster-name: "{{ cluster_name }}"
        cluster.x-k8s.io/deployment-name: "{{ kubemark_deploy_nodes_deployment_name }}"
    spec:
      bootstrap:
        configRef:
          apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
          kind: KubeadmConfigTemplate
          name: "{{ kubemark_deploy_nodes_deployment_name }}"
        dataSecretName: worker-user-data
      clusterName: "{{ cluster_name }}"
      infrastructureRef:
        apiVersion: infrastructure.cluster.x-k8s.io/v1alpha4
        kind: KubemarkMachineTemplate
        name: "{{ kubemark_deploy_nodes_deployment_name }}"
      version: "{{ kubernetes_version }}"

      kubemarkOptions:
        extendedResources: {{ kubemark_node_resource }}

---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha4
kind: KubemarkMachineTemplate
metadata:
  labels:
    cluster.x-k8s.io/cluster-name: "{{ cluster_name }}"
  name: "{{ kubemark_deploy_nodes_deployment_name }}"
  namespace: "{{ kubemark_deploy_nodes_namespace }}"
spec:
  template:
    spec:
      extraMounts:
        # The following will mount the host's containerd socket into the kubemark nodes.
        # This is being added to alleviate an issue with kubemark nodes not being able to
        # start pods that are scheduled to them. for more information, please see
        # https://github.com/kubernetes-sigs/cluster-api-provider-kubemark/issues/22
        - name: "containerd-sock"
          containerPath: "/run/containerd/containerd.sock"
          hostPath: "/run/crio/crio.sock"
          type: "Socket"

---
apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
kind: KubeadmConfigTemplate
metadata:
  name: "{{ kubemark_deploy_nodes_deployment_name }}"
spec:
  template:
    spec:
      joinConfiguration:
        nodeRegistration:
          name: {% raw %}'{{ ds.meta_data.local_hostname }}'{% endraw %}
