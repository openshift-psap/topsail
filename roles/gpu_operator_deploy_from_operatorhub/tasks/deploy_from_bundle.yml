- name: Make sure that 'operator-sdk' is available
  command: operator-sdk version

- name: Delete the bundle catalog, if it exists
  command:
    oc delete catalogsource/{{ deploy_bundle_package_name }}-catalog
      -n {{ deploy_bundle_namespace }}
      --ignore-not-found=true

- name: Delete the bundle subscription, if it exists
  command:
    oc delete subscription.operators.coreos.com
      -l operators.coreos.com/{{ deploy_bundle_package_name }}.{{ deploy_bundle_namespace }}
      -n {{ deploy_bundle_namespace }}
      --ignore-not-found=true

- name: Ensure that the GPU Operator namespace exists
  command:
    oc get ns/{{ gpu_operator_operator_namespace }}
  failed_when: false
  register: namespace_exists_cmd

- name: Create the GPU Operator namespace, if it does not exist (mandatory for operator-sdk run bundle)
  when: namespace_exists_cmd.rc != 0
  command:
    oc create namespace {{ gpu_operator_operator_namespace }}

- name: Deploy the GPU Operator from the bundle
  command:
    operator-sdk run bundle --timeout=5m
                 -n {{ gpu_operator_operator_namespace }}
                 --install-mode OwnNamespace
                 {{ deploy_bundle_image }}

- name: Store the version of the GPU Operator that will be installed
  shell:
    set -eo pipefail;
    oc get ClusterServiceVersion
       -oname
       -n {{ deploy_bundle_namespace }}
     | grep {{ deploy_bundle_package_name }}
     | tee {{ artifact_extra_logs_dir }}/gpu_operator_bundle_csv_name.txt
  register: gpu_operator_csv_name

- name: Fix the GPU Operator image when deploying our master operator bundle image
  when: deploy_bundle_image == psap_quay_master_bundle
  block:
  - name: Fix the image of the operator deployment in the CSV
    command: |
      oc patch {{ gpu_operator_csv_name.stdout }}
         --type='json'
         -p='[{"op": "replace", "path": "/spec/install/spec/deployments/0/spec/template/spec/containers/0/image", "value":"{{ psap_quay_master_operator }}"}]'
         -n {{ deploy_bundle_namespace }}


  - name: Wait for the operator deployment to be updated by the CSV controller
    shell:
      set -euxo pipefail;
      oc get deployment/gpu-operator
         -n "{{ deploy_bundle_namespace }}"
         -ojsonpath={.spec.template.spec.containers[0].image}
         | grep {{ psap_quay_master_operator }}
    register: operator_deployment_image
    until:
    - operator_deployment_image.rc == 0
    retries: 15
    delay: 30

  - name: Wait for the GPU Operator master image to be redeployed by the deployment controller
    command:
      oc wait deployment/gpu-operator
              --for=condition=available
              --timeout=600s
              -n "{{ deploy_bundle_namespace }}"

- name: Store the YAML of the GPU Operator CSV that being installed
  shell:
    oc get {{ gpu_operator_csv_name.stdout }}
       -oyaml
       -n {{ deploy_bundle_namespace }}
       > {{ artifact_extra_logs_dir }}/gpu_operator_bundle_csv.yml
