---
- name: Check if RHODS CSV exists
  shell:
    set -o pipefail;
    oc get csv -n redhat-ods-operator -oname | grep rhods-operator
  register: has_rhods_csv_cmd

- name: Save the RHODS CSV
  shell:
    oc get {{ has_rhods_csv_cmd.stdout }} -n redhat-ods-operator -oyaml > "{{ artifact_extra_logs_dir }}/rhods.csv.yaml"
  when: has_rhods_csv_cmd.stdout | length > 0

- name: Get the RHODS version, if rhods is installed
  shell:
    oc get {{ has_rhods_csv_cmd.stdout }} -n redhat-ods-operator -ojsonpath={.spec.version} > "{{ artifact_extra_logs_dir }}/rhods.version"
  when: has_rhods_csv_cmd.stdout | length > 0

- name: Store the RHODS creation timestamp, if RHODS is installed
  shell:
    oc get {{ has_rhods_csv_cmd.stdout }} -n redhat-ods-operator -oname -ojsonpath={.metadata.annotations.createdAt}
      > "{{ artifact_extra_logs_dir }}/rhods.createdAt"
  when: has_rhods_csv_cmd.stdout | length > 0

- name: Save the state of the datasciencecluster configuration
  shell:
    oc get datasciencecluster -oyaml
       > "{{ artifact_extra_logs_dir }}/DataScienceCluster.yaml"
  ignore_errors: true

- name: Get the json of the pods
  shell:
    oc get pods -ojson
       -lcomponent=predictor
       -A
       > "{{ artifact_extra_logs_dir }}/predictor_pods.json"

- name: Get the yaml of the pods
  shell:
    oc get pods -oyaml
       -lcomponent=predictor
       -A
       > "{{ artifact_extra_logs_dir }}/predictor_pods.yaml"

- name: Get the status of the pods
  shell:
    oc get pods -owide
       -lcomponent=predictor
       -A
       > "{{ artifact_extra_logs_dir }}/predictor_pods.status"

- name: Store RHOAI DSC
  shell:
    oc get dsc -oyaml -A
       > {{ artifact_extra_logs_dir }}/dsc.yml

- name: Store RHOAI DSC
  shell:
    oc get dsci -oyaml -A
       > {{ artifact_extra_logs_dir }}/dsci.yml

- name: Capture the Serverless state
  include_tasks: serverless.yaml
  when: not kserve_capture_operators_state_raw_deployment | bool

- name: Capture the Pods logs
  include_tasks: capture_pods.yaml
  loop:
  - openshift-operators
  - knative-serving
  - redhat-ods-applications
  - redhat-ods-operator
  - istio-system
  loop_control:
    loop_var: namespace


# OCP version

- name: Store OpenShift YAML version
  shell:
    oc version -oyaml
       > {{ artifact_extra_logs_dir }}/ocp_version.yaml

# Cluster nodes

- name: Get the cluster nodes json
  shell:
    oc get nodes -ojson > "{{ artifact_extra_logs_dir }}/nodes.json"
