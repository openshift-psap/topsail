apiVersion: kubeflow.org/v1
kind: PyTorchJob
metadata:
  name: {{ job_name_safe }}
  namespace: {{ fine_tuning_run_fine_tuning_job_namespace }}
spec:
  pytorchReplicaSpecs:
    Master:
      replicas: 1
      restartPolicy: Never
      template: &job_template
        metadata:
          annotations:
{% if fine_tuning_run_fine_tuning_job_use_secondary_nic %}
            k8s.v1.cni.cncf.io/networks:
              '[
{% for secondary_nic in fine_tuning_run_fine_tuning_job_use_secondary_nic %}
                {
                  "name": "{{ secondary_nic }}",
                  "namespace": "{{ fine_tuning_run_fine_tuning_job_namespace }}"
                }{% if secondary_nic != fine_tuning_run_fine_tuning_job_use_secondary_nic[-1] %},{% endif %}
{% endfor %}
              ]'
{% endif %}
        spec:
{% if fine_tuning_run_fine_tuning_job_use_host_network %}
          hostNetwork: true
          dnsPolicy: ClusterFirstWithHostNet
{% endif %}
          containers:
          - name: pytorch
            image: {{ fine_tuning_run_fine_tuning_job_container_image }}
            imagePullPolicy: IfNotPresent
{% if fine_tuning_run_fine_tuning_job_use_secondary_nic %}
            securityContext:
              capabilities:
                add:
                - IPC_LOCK
                - SYS_RESOURCE
                - NET_ADMIN
                - NET_RAW
{% endif %}
            command: [bash, "/mnt/entrypoint/{{ fine_tuning_job_entrypoint_name }}"]
            env:
            - name: CONFIG_JSON_PATH
              value: /mnt/config/config.json
            - name: WORKLOAD
              value: "{{ fine_tuning_run_fine_tuning_job_workload }}"
            - name: DATASET_SOURCE
              value: "/mnt/storage/dataset/{{ fine_tuning_run_fine_tuning_job_dataset_name }}"
            - name: DATASET_DEST
              value: "/mnt/output/dataset.json"
            - name: TRITON_HOME
              value: "/mnt/output"
            - name: TRITON_DUMP_DIR
              value: "/mnt/output"
            - name: TRITON_CACHE_DIR
              value: "/mnt/output"
            - name: TRITON_OVERRIDE_DIR
              value: "/mnt/output"
            - name: DATASET_REPLICATION
              value: "{{ fine_tuning_run_fine_tuning_job_dataset_replication }}"
{% if fine_tuning_run_fine_tuning_job_dataset_transform %}
            - name: DATASET_TRANSFORM
              value: "/mnt/entrypoint/{{ fine_tuning_run_fine_tuning_job_dataset_transform }}"
{% endif %}
{% if fine_tuning_run_fine_tuning_job_dataset_prefer_cache %}
            - name: DATASET_PREFER_CACHE
              value: "true"
{% endif %}
{% if fine_tuning_run_fine_tuning_job_dataset_prepare_cache_only %}
            - name: DATASET_PREPARE_CACHE_ONLY
              value: "true"
{% endif %}

{% if fine_tuning_run_fine_tuning_job_gpu %}
            - name: NUM_GPUS
              value: "{{ fine_tuning_run_fine_tuning_job_gpu }}"
{% endif %}
{% if fine_tuning_run_fine_tuning_job_sleep_forever %}
            - name: SLEEP_FOREVER
              value: "true"
{% endif %}
{% if rdma_nics %}
            - name: WITH_RDMA
              value: "true"
{% endif %}
            - name: MODEL_NAME
              value: "{{ fine_tuning_run_fine_tuning_job_model_name}}"
{% if fine_tuning_run_fine_tuning_job_use_secondary_nic %}
            - name: USE_PRIMARY_NIC
              value: "{{ fine_tuning_run_fine_tuning_job_use_primary_nic }}"

            - name: NCCL_SOCKET_IFNAME
              value: "{{ nccl_socket_ifname }}"
            - name: NODE_HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
{% endif %}
{% if fine_tuning_run_fine_tuning_job_retrieve_files %}
            - name: RETRIEVE
              value: "{{ fine_tuning_job_retrieval_output_dir }}"
{% endif %}
            volumeMounts:
            - name: storage-volume
              mountPath: /mnt/storage
            - name: entrypoint-volume
              mountPath: /mnt/entrypoint
            - name: config-volume
              mountPath: /mnt/config
{% if fine_tuning_run_fine_tuning_job_shared_memory %}
            - name: shm-volume
              mountPath: /dev/shm
            - name: shared-volume
              mountPath: /mnt/shared
{% endif %}
            - name: output-volume
              mountPath: /mnt/output
{% if fine_tuning_run_fine_tuning_job_use_secondary_nic %}
            - name: nic-mapping-volume
              mountPath: /mnt/nic-mapping
{% endif %}
            resources:
              requests: &request_block
{% if fine_tuning_run_fine_tuning_job_gpu %}
                nvidia.com/gpu: "{{ fine_tuning_run_fine_tuning_job_gpu }}"
{% endif %}
                memory: "{{ fine_tuning_run_fine_tuning_job_memory }}Gi"
                cpu: "{{ fine_tuning_run_fine_tuning_job_cpu }}"
{% if rdma_nics %}
                nvidia.com/roce: "{{ fine_tuning_run_fine_tuning_job_use_secondary_nic | length }}"
{% endif %}
{% if fine_tuning_run_fine_tuning_job_request_equals_limits %}
              limits: *request_block
{% elif fine_tuning_run_fine_tuning_job_gpu %}
              limits:
                nvidia.com/gpu: "{{ fine_tuning_run_fine_tuning_job_gpu }}"
{% if rdma_nics %}
                nvidia.com/roce: "{{ fine_tuning_run_fine_tuning_job_use_secondary_nic | length }}"
{% endif %}
{% endif %}
          volumes:
          - name: storage-volume
            persistentVolumeClaim:
              claimName: {{ fine_tuning_run_fine_tuning_job_pvc_name }}
{% if fine_tuning_run_fine_tuning_job_shared_memory %}
          - name: shm-volume
            emptyDir:
              medium: Memory
              sizeLimit: "{{ fine_tuning_run_fine_tuning_job_shared_memory }}Gi"
          - name: shared-volume
            emptyDir: {}
{% endif %}
          - name: config-volume
            configMap:
              name: {{ job_name_safe }}-config
          - name: entrypoint-volume
            configMap:
              name: {{ job_name_safe }}-entrypoint
{% if fine_tuning_run_fine_tuning_job_use_secondary_nic %}
          - name: nic-mapping-volume
            configMap:
              name: {{ job_name_safe }}-nic-mapping
{% endif %}
{% if fine_tuning_run_fine_tuning_job_ephemeral_output_pvc_size %}
          - name: output-volume
            ephemeral:
              volumeClaimTemplate:
                metadata:
                spec:
                  accessModes: [ "ReadWriteOnce" ]
                  resources:
                    requests:
                      storage: "{{ fine_tuning_run_fine_tuning_job_ephemeral_output_pvc_size }}"
{% else %}
          - name: output-volume
            emptyDir: {}
{% endif %}
{% if fine_tuning_run_fine_tuning_job_pod_count > 1 %}
    Worker:
      replicas: {{ fine_tuning_run_fine_tuning_job_pod_count - 1 }}
      restartPolicy: Never
      template: *job_template
{% endif %}
