---
apiVersion: v1
kind: Service
metadata:
  name: {{ server_deploy_opensearch_name }}
  namespace: {{ server_deploy_opensearch_namespace }}
  labels:
    app.kubernetes.io/name: opensearch-{{ server_deploy_opensearch_name }}
spec:
  type: ClusterIP
  ports:
  - name: tcp-opensearch
    port: 9200
    targetPort: tcp-opensearch
  - name: tcp-os-perf
    port: 9600
    targetPort: tcp-os-perf
  - name: tcp-os-dashboards
    port: 5601
    targetPort: tcp-os-dash
  selector:
    app.kubernetes.io/name: opensearch-{{ server_deploy_opensearch_name }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ server_deploy_opensearch_name }}
  namespace: {{ server_deploy_opensearch_namespace }}
  labels:
    app.kubernetes.io/name: opensearch-{{ server_deploy_opensearch_name }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: opensearch-{{ server_deploy_opensearch_name }}
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: opensearch-{{ server_deploy_opensearch_name }}
    spec:
      serviceAccount: opensearch-{{ server_deploy_opensearch_name }}
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        #seccompProfile:
        #  type: RuntimeDefault
      containers:
      # OpenSearch
      - name: opensearch
        image: docker.io/opensearchproject/opensearch:2
        command: [bash, -cxe]
        args:
        - |
          # use 'bash -ec' to avoid leaking the password with '-x'
          bash -xec 'HASH=$(plugins/opensearch-security/tools/hash.sh -p "$OPENSEARCH_PASSWORD"); sed "s@PASSWORD_HASH@$HASH@" /mnt/config_users/internal_users.yml > config/internal_users.yml'
          cp config/internal_users.yml config/opensearch-security/internal_users.yml

          exec ./opensearch-docker-entrypoint.sh
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop: ["ALL"]
        env:
        - name: discovery.type
          value: single-node
        - name: OPENSEARCH_PASSWORD
          valueFrom:
            secretKeyRef:
              name: opensearch-user-creds-{{ server_deploy_opensearch_name }}
              key: OPENSEARCH_PASSWORD
        ports:
        - name: tcp-opensearch
          containerPort: 9200
        - name: tcp-os-perf
          containerPort: 9600
        readinessProbe:
          tcpSocket:
            port: 9200
          initialDelaySeconds: 15
          periodSeconds: 10
        volumeMounts:
        - mountPath: /usr/share/opensearch/data
          name: opensearch-storage
        - mountPath: /mnt/config_users
          name: opensearch-users-config
          subpath: internal_users.yml
      # OpenSearch Dashboards
      - name: opensearch-dashboards
        image: docker.io/opensearchproject/opensearch-dashboards:2
        command: [bash, -cxe]
        args:
        - |
          cp /mnt/opensearch-dashboards-config/opensearch_dashboards.yml /usr/share/opensearch-dashboards/config/opensearch_dashboards.yml

          exec ./opensearch-dashboards-docker-entrypoint.sh
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop: ["ALL"]
        env:
        - name: OPENSEARCH_USERNAME
          value: admin
        - name: OPENSEARCH_PASSWORD
          valueFrom:
            secretKeyRef:
              name: opensearch-user-creds-{{ server_deploy_opensearch_name }}
              key: OPENSEARCH_PASSWORD
        ports:
        - name: tcp-os-dash
          containerPort: 5601
        volumeMounts:
        - mountPath: /mnt/opensearch-dashboards-config
          name: opensearch-dashboards-config
      # ---
      volumes:
      - name: opensearch-dashboards-config
        configMap:
          name: opensearch-dashboards-config-{{ server_deploy_opensearch_name }}
      - name: opensearch-users-config
        configMap:
          name: opensearch-users-config-{{ server_deploy_opensearch_name }}
      - name: opensearch-storage
        emptyDir: {}
