- name: Get all the nodes
  failed_when: false
  shell:
    oc get nodes
       > {{ artifact_extra_logs_dir }}/all_nodes.list

- name: Get all the machines
  shell:
    oc get machines -A
       > {{ artifact_extra_logs_dir }}/all_machines.list
  failed_when: false

# ---

- name: Get the GPU Operator Pod as a list from {{ gpu_operator_operator_namespace }}
  shell:
    oc get pods -lapp=gpu-operator
       -n {{ gpu_operator_operator_namespace }} -owide
       > {{ artifact_extra_logs_dir }}/gpu_operator_pod.list
  failed_when: false

- name: Get the GPU Operator Pod as yaml from {{ gpu_operator_operator_namespace }}
  shell:
    oc get pods -lapp=gpu-operator
       -n {{ gpu_operator_operator_namespace }} -oyaml
       > {{ artifact_extra_logs_dir }}/gpu_operator_pod.yaml
  failed_when: false

- name: Get the Pods as a list from {{ gpu_operator_namespace }}
  shell:
    oc get pods -owide
       -n {{ gpu_operator_namespace }}
       > {{ artifact_extra_logs_dir }}/all_gpu_pods.list
  failed_when: false

- name: Get the Pods as yaml from {{ gpu_operator_namespace }}
  shell:
    oc get pods -oyaml
       -n {{ gpu_operator_namespace }}
       > {{ artifact_extra_logs_dir }}/all_gpu_pods.yaml
  failed_when: false

- name: Get the GPU Operator Pods Images
  shell: |
    dest_file="{{ artifact_extra_logs_dir }}/gpu_operator_pod.images.list";
    for ns in {{ gpu_operator_all_namespaces }} gpu-operator-ci; do
      oc get project/$ns &>/dev/null || continue;
      oc get pods -n "$ns" \
         -o=jsonpath='{range .items[*]}{"\n"}{.metadata.name}{":\t"}{range .spec.containers[*]}{.image}{" "}{end}{end}' \
         >> $dest_file;
         echo "" >> $dest_file;
    done
  failed_when: false

- name: Get the following DaemonSets as a list from {{ gpu_operator_namespace }}
  shell:
    oc get ds
       -n {{ gpu_operator_namespace }}
       > {{ artifact_extra_logs_dir }}/all_gpu_ds.list
  failed_when: false

- name: Get the following DaemonSets in yaml from {{ gpu_operator_namespace }}
  shell:
    oc get ds -oyaml
       -n {{ gpu_operator_namespace }}
       > {{ artifact_extra_logs_dir }}/all_gpu_ds.yaml
  failed_when: false

- name: Get the GPU nodes (list)
  shell:
    oc get nodes
       -l nvidia.com/gpu.present=true
       > {{ artifact_extra_logs_dir }}/gpu_operator_nodes.list
  failed_when: false

- name: Get the labels of GPU nodes (list)
  shell:
    set -eo pipefail;
    oc get nodes
       -l nvidia.com/gpu.present=true
       | sed 's|,|,- |g' | tr ',' '\n'
       > {{ artifact_extra_logs_dir }}/gpu_operator_nodes.list
  failed_when: false

# --

- name: Get the GPU Operator logs
  shell:
    oc logs deployment/gpu-operator -n {{ gpu_operator_operator_namespace }} > "{{ artifact_extra_logs_dir }}/gpu_operator.log"
  failed_when: false

- name: Get the name of the GPU Operator DaemonSets
  command:
    oc get DaemonSets -o name -n {{ gpu_operator_namespace }}
  register: gpu_operator_daemonsets

- name: Get the logs of the GPU Operator DaemonSets
  shell:
    set -eo pipefail;
    echo "Saving {{ item }} logs ...";
    oc logs "{{ item }}"
       -n {{ gpu_operator_namespace }}
       --all-containers --prefix
       > {{ artifact_extra_logs_dir }}/gpu_operator_$(echo "{{ item }}" | cut -d/ -f2).log
  with_items: "{{ gpu_operator_daemonsets.stdout_lines }}"
  failed_when: false

- name: Get the name of the GPU Operator Pods
  command:
    oc get Pods -o name -n {{ gpu_operator_namespace }}
  register: gpu_operator_pods

- name: Get the description of the GPU Operator Pods
  shell:
    set -eo pipefail;
    echo "Saving {{ item }} description ...";
    oc describe "{{ item }}"
       -n {{ gpu_operator_namespace }}
       > {{ artifact_extra_logs_dir }}/gpu_operator_$(echo "{{ item }}" | cut -d/ -f2).descr
  with_items: "{{ gpu_operator_pods.stdout_lines }}"
  failed_when: false
