apiVersion: v1
kind: Pod
metadata:
  labels:
    app: topsail
    test: {{ local_ci_run_pod_name }}
  name: {{ local_ci_run_pod_name }}
  namespace: {{ local_ci_run_namespace }}
spec:
  initContainers:
  - name: fetch-git
    workingDir: /opt/topsail/src
    command:
    - bash
    - -cxe
    args:
    - |
{% if local_ci_run_update_git %}
      git clone "$GIT_REPO" .
      git config --global --add safe.directory "$PWD"

      if [[ "$PULL_NUMBER" ]]; then
        git fetch origin refs/pull/$PULL_NUMBER/merge:pull_$PULL_NUMBER
        git switch pull_$PULL_NUMBER
        git show --quiet --oneline main..HEAD
      elif [[ "$GIT_REF" ]]; then
        git fetch origin "$GIT_REF"
        git show --quiet --oneline main..$GIT_REF
      else
        git pull
      fi

      git submodule update --init
{% endif %}
    env:
    - name: TOPSAIL_LOCAL_CI
      value: "yes"
    - name: GIT_REPO
      value: "{{ local_ci_run_git_repo }}"
    - name: GIT_REF
      value: "{{ local_ci_run_git_ref }}"
    - name: PULL_NUMBER
      value: "{{ local_ci_run_pr_number }}"
    - name: ARTIFACT_DIR
      value: /logs/artifacts
    image: "image-registry.openshift-image-registry.svc:5000/{{ local_ci_run_namespace }}/{{ local_ci_run_istag }}"
    imagePullPolicy: Always
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop: [ALL]
      seccompProfile:
        type: RuntimeDefault
    runAsNonRoot: True
    volumeMounts:
    - mountPath: /logs/artifacts
      name: artifacts
{% if local_ci_run_update_git %}
    - mountPath: /opt/topsail/src
      name: topsail-repo
{% endif %}
  serviceAccount: "{{ local_ci_run_service_account }}"
  containers:
  - name: main
    command:
    - bash
    - -c
    args:
    - |
      set -o errexit
      set -o pipefail
      set -o nounset
      set -o errtrace
      set -x

      trap 'echo $? > "$ARTIFACT_DIR/.local_ci_done"' ERR

      cat > "$ARTIFACT_DIR/variable_overrides.yaml" <<EOF
      PR_POSITIONAL_ARG_0: "{{ local_ci_run_test_name }}"
{% for element in local_ci_run_test_args or [] %}
      PR_POSITIONAL_ARG_{{loop.index}}: "{{ element }}"
{% endfor %}
{% if local_ci_run_pr_config %}
      {{ local_ci_run_pr_config_content_cmd.stdout | indent(6) }}
{% endif %}
      EOF

{% if local_ci_run_test_description %}
      cat > "$ARTIFACT_DIR/TEST_DESCRIPTION" <<EOF
      {{ local_ci_run_test_description_content_cmd.stdout | indent(6) }}
      EOF
{% endif %}

{% if local_ci_run_init_command %}
      echo "Running the init command ..."
      {{ local_ci_run_init_command }} &> "${ARTIFACT_DIR}/init.log"
{% endif %}
      run {{ local_ci_run_ci_command }}
      echo 0 > "$ARTIFACT_DIR/.local_ci_done"

    image: "image-registry.openshift-image-registry.svc:5000/{{ local_ci_run_namespace }}/{{ local_ci_run_istag }}"
    imagePullPolicy: Always
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop: [ALL]
      seccompProfile:
        type: RuntimeDefault
    runAsNonRoot: True
    env:
    - name: TOPSAIL_LOCAL_CI
      value: "true"
    - name: JOB_NAME
      value: local-ci
    - name: JOB_NAME_SAFE
      value: "{{ local_ci_run_test_name }}"
    - name: "RUNNING_LOCALLY"
      value: "yes"

    - name: TEST_RUN_IDENTIFIER
      value: "{{ local_ci_run_export_test_run_identifier }}"
    - name: TOPSAIL_LOCAL_CI_BUCKET_NAME
      value: "{{ local_ci_run_export_bucket_name }}"
    - name: TEST_NAME
      value: "{{ local_ci_run_test_name }}"

    - name: ARTIFACT_DIR
      value: /logs/artifacts
    - name: PULL_BASE_SHA
      value: main
    - name: PULL_BASE_REF
      value: main
    - name: PULL_PULL_SHA
      value: HEAD
    - name: PULL_NUMBER
      value: "{{ local_ci_run_pr_number }}"
    - name: REPO_OWNER
      value: "{{ local_ci_run_git_repo.split('/')[3] }}"
    - name: REPO_NAME
      value: "{{ local_ci_run_git_repo.split('/')[4] }}"
    - name: KUBECONFIG # Kubernetes is accessed via the in-Pod credentials
      value: ""
{% if local_ci_run_secret_name %}
    - name: {{ local_ci_run_secret_env_key }}
      value: /secrets/{{ local_ci_run_secret_name }}
{% endif %}
    - name: SHARED_DIR # shouldn't be used
      value: /tmp/shared
    volumeMounts:
    - mountPath: /logs/artifacts
      name: artifacts
{% if local_ci_run_update_git %}
    - mountPath: /opt/topsail/src
      name: topsail-repo
{% endif %}
{% if local_ci_run_secret_name %}
    - mountPath: /secrets/{{ local_ci_run_secret_name }}
      name: {{ local_ci_run_secret_name }}
{% endif %}
  - name: artifacts-exporter
    command:
    - bash
    - -c
    args:
    - |
      set -o errexit
      set -o pipefail
      set -o nounset
      set -o errtrace

      echo 'Waiting for the main container to be done ...'
      set +x
      while [[ ! -f "$ARTIFACT_DIR/.local_ci_done" ]]; do
        sleep 1
      done
      set -x
      echo 'The main container is done ...'

{% if local_ci_run_export %}
      echo "Running the export command ..."

      export AWS_SHARED_CREDENTIALS_FILE="${{ local_ci_run_secret_env_key }}/.awscred"

      if [[ ! -e "$AWS_SHARED_CREDENTIALS_FILE" ]]; then
        echo "ERROR: AWS crentials file doesn't exist in the {{ local_ci_run_secret_env_key }} secrets ..."
        exit 1
      fi

      dest="s3://$TOPSAIL_LOCAL_CI_BUCKET_NAME/local-ci/$TEST_NAME/$TEST_RUN_IDENTIFIER"
      echo "Pushing to '$dest'"
      aws s3 cp "$ARTIFACT_DIR" "$dest" --recursive --acl public-read

{% elif not local_ci_run_export %}
      echo "Export disabled."
{% endif %}

{% if local_ci_run_retrieve_artifacts %}
      echo 'Waiting for the local export to be done ...'
      set +x
      while [[ ! -f /tmp/local_export_done ]]; do
        sleep 1
      done
      echo 'The local export is done ...'
{% else %}
      echo 'Local export disabled, no need to wait for it ...'
{% endif %}
      echo 'All done, bye.'

      exit "$(cat $ARTIFACT_DIR/.local_ci_done)"

    image: "image-registry.openshift-image-registry.svc:5000/{{ local_ci_run_namespace }}/{{ local_ci_run_istag }}"
    imagePullPolicy: Always
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop: [ALL]
      seccompProfile:
        type: RuntimeDefault
    runAsNonRoot: True
    env:
{% if local_ci_run_secret_name %}
    - name: {{ local_ci_run_secret_env_key }}
      value: /secrets/{{ local_ci_run_secret_name }}
{% endif %}
    - name: TEST_RUN_IDENTIFIER
      value: "{{ local_ci_run_export_test_run_identifier }}"
    - name: TOPSAIL_LOCAL_CI_BUCKET_NAME
      value: "{{ local_ci_run_export_bucket_name }}"
    - name: TEST_NAME
      value: "{{ local_ci_run_test_name }}"
    - name: JOB_NAME
      value: local-ci
    - name: ARTIFACT_DIR
      value: /logs/artifacts
    - name: KUBECONFIG
      value: ""
    - name: SHARED_DIR # shouldn't be used
      value: /tmp/shared
    volumeMounts:
    - mountPath: /logs/artifacts
      name: artifacts
{% if local_ci_run_update_git %}
    - mountPath: /opt/topsail/src
      name: topsail-repo
{% endif %}
{% if local_ci_run_secret_name %}
    - mountPath: /secrets/{{ local_ci_run_secret_name }}
      name: {{ local_ci_run_secret_name }}
{% endif %}
  restartPolicy: Never
  volumes:
  - name: artifacts
    emptyDir: {}
{% if local_ci_run_update_git %}
  - name: topsail-repo
    emptyDir: {}
{% endif %}
{% if local_ci_run_secret_name %}
  - name: {{ local_ci_run_secret_name }}
    secret:
      secretName: {{ local_ci_run_secret_name }}
{% endif %}
