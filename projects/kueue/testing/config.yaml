ci_presets:
  # name of the presets to apply, or null if no preset
  name: null
  # list of names of the presets to apply, or a single name, or null if no preset
  names: null

  single:
    clusters.create.type: single

  keep:
    extends: [light_cluster]

    clusters.create.keep: true

  light_cluster:
    clusters.create.ocp.deploy_cluster.target: cluster_light

  light:
    extends: [light_cluster]

  cleanup:
    clusters.cleanup_on_exit: true

  # ---

  cluster_dgx:
    clusters.sutest.compute.machineset.type: "DGX A100-40GB"

  cluster_icelake:
    clusters.sutest.compute.machineset.type: "Icelake"

  metal:
    clusters.sutest.is_metal: true
    clusters.driver.is_metal: true
    clusters.sutest.compute.dedicated: false
    clusters.driver.compute.dedicated: false
    clusters.sutest.compute.machineset.type: "bare-metal node"

  not_metal:
    clusters.sutest.is_metal: false
    clusters.driver.is_metal: false

  # ---

  kueue_k8s_comparison:
    tests.schedulers.matbenchmarking.enabled: true
    tests.schedulers.test_settings.mode: [coscheduler, kueue, job]

  cpu_icelake_gang_scheduling:
    extends: [kueue_k8s_comparison]
    tests.schedulers.tests_to_run: [cpu_icelake_gang_scheduling]


  cpu_icelake_gang_scheduling_large:
    extends: [kueue_k8s_comparison]
    tests.schedulers.tests_to_run: [cpu_icelake_gang_scheduling_large]

  cpu_icelake_scheduling:
    extends: [kueue_k8s_comparison]
    tests.schedulers.tests_to_run: [cpu_icelake_scheduling]

  cpu_icelake_scheduling_large:
    extends: [kueue_k8s_comparison]
    tests.schedulers.tests_to_run: [cpu_icelake_scheduling_large]

  cpu_light_scheduling:
    tests.schedulers.tests_to_run: [cpu_light_scheduling]
    tests.schedulers.matbenchmarking.enabled: true
    tests.schedulers.test_settings:
      mode: [kueue, job] # mcad

  cpu_light_unschedulable:
    tests.schedulers.tests_to_run: [cpu_light_unschedulable]
    tests.schedulers.matbenchmarking.enabled: true
    tests.schedulers.test_settings:
      count: [200, 350, 500]

  cpu_all_schedulable:
    clusters.sutest.worker.fill_resources.enabled: true
    tests.schedulers.test_templates.common_light.node.count: 4

    tests.schedulers.tests_to_run: [cpu_light_all_schedulable]
    tests.schedulers.matbenchmarking.enabled: true
    tests.schedulers.test_settings:
      count: [100, 150]
      mode: [kueue, job] # mcad

  # ---

secrets:
  dir:
    name: psap-ods-secret
    env_key: PSAP_ODS_SECRET_PATH
  # name of the file containing the properties of LDAP secrets
  s3_ldap_password_file: s3_ldap.passwords
  keep_cluster_password_file: get_cluster.password
  brew_registry_redhat_io_token_file: brew.registry.redhat.io.token
  model_s3_cred: .awscred
  opensearch_instances: opensearch.yaml
  aws_credentials: .awscred

clusters:
  metal_profiles:
    p42-h03-dgx.rdu3.labs.perfscale.redhat.com: cluster_dgx
    e26-h23-000-r650: cluster_icelake
    bb37-h13-000-r750.rdu3.labs.perfscale.redhat.com: cluster_a30
  create:
    type: single # can be: single, ocp, managed
    keep: false
    name_prefix: kserve-ci
    ocp:
      # list of tags to apply to the machineset when creating the cluster
      tags:
        TicketId: 404
        Project: PSAP/RHOAI/kueue/ci-dev
      deploy_cluster:
        target: cluster
      base_domain: psap.aws.rhperfscale.org
      version: 4.15.5
      region: us-west-2
      control_plane:
        type: m6a.xlarge
      workers:
        type: m6a.2xlarge
        count: 2
        spot: false

  sutest:
    is_metal: false
    lab:
      name: null
    compute:
      dedicated: true
      machineset:
        name: workload-pods
        type: g4dn.2xlarge
        count: null
        disk_size: 400 # GB for the root partition
        spot: false
        taint:
          key: only-workload-pods
          value: "yes"
          effect: NoSchedule
    worker:
      label: initial_worker_node=true
      fill_resources:
        enabled: false
        namespace: worker-nodes-placeholder
  driver:
    is_metal: false
    compute:
      dedicated: true
      machineset:
        name: test-pods
        type: m6i.2xlarge
        count: null
        spot: false
        taint:
          key: only-test-pods
          value: "yes"
          effect: NoSchedule
  cleanup_on_exit: false

rhods:
  catalog:
    image: brew.registry.redhat.io/rh-osbs/iib
    tag: 706700
    channel: fast
    version: 2.9.0
    version_name: nightly-52
  operator:
    # set to true to stop the RHODS operator
    stop: false
    customize:
      kserve:
        enabled: false
        cpu: 500m
        memory: 500Mi

gpu:
  prepare_cluster: false
  time_sharing:
    replicas: 1

tests:
  mode: job
  dry_mode: false
  visualize: true
  capture_prom: true
  deploy_coscheduler: true
  schedulers:
    kueue:
      queue_name: local-queue

    namespace: scheduler-load-test

    prepare_nodes: true
    stop_on_error: true

    tests_to_run: [cpu_icelake_scheduling]
    distribution: poisson
    test_templates_file: test_templates.yaml # relative to testing/codeflare directory

    matbenchmarking:
      enabled: false
      visu_file: plot_multiple_tests.yaml

    test_settings:
      count: 10
      pod:
        count: 4
      pod:
        request:
          cpu: 50
        runtime: 180
      timespan: 1

matbench:
  preset: null
  workload: projects.kueue.visualizations.schedulers
  config_file: plots.yaml
  download:
    mode: prefer_cache
    url:
    url_file:
    # if true, copy the results downloaded by `matbench download` into the artifacts directory
    save_to_artifacts: false
  ignore_exit_code: true
  # directory to plot. Set by topsail/testing/visualize.py before launching the visualization
  test_directory: null
  lts:
    generate: false
    horreum:
      test_name: null
    opensearch:
      export:
        enabled: false
        enabled_on_replot: false
        fail_test_on_fail: true
      instance: smoke
      index: rhoai-kueue
      index_prefix: ""

    regression_analyses:
      enabled: false
      enabled_on_replot: false
      # if the regression analyses fail, mark the test as failed
      fail_test_on_regression: true
export_artifacts:
  enabled: false
  bucket: rhoai-cpt-artifacts
  path_prefix: cpt/kueue
  dest: null # will be set by the export code
